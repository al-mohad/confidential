// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by dart-confidential

import 'dart:typed_data';
import 'dart:convert';

/// Container for obfuscated secret data.
class Secret {
  /// The obfuscated data.
  final Uint8List data;
  
  /// The nonce used for obfuscation.
  final int nonce;
  
  const Secret({required this.data, required this.nonce});
}

/// Type alias for deobfuscation functions.
typedef DeobfuscationFunction<T> = T Function(Uint8List data, int nonce);

/// Base class for obfuscated values.
abstract class ObfuscatedValue<T> {
  /// The secret containing obfuscated data.
  final Secret secret;
  
  /// The deobfuscation function.
  final DeobfuscationFunction<T> deobfuscate;
  
  const ObfuscatedValue(this.secret, this.deobfuscate);
  
  /// Gets the deobfuscated value.
  T get value => deobfuscate(secret.data, secret.nonce);
}

/// Obfuscated string value.
class ObfuscatedString extends ObfuscatedValue<String> {
  const ObfuscatedString(super.secret, super.deobfuscate);
}

/// Obfuscated list of strings value.
class ObfuscatedStringList extends ObfuscatedValue<List<String>> {
  const ObfuscatedStringList(super.secret, super.deobfuscate);
}

class Secrets {

  static final apiKey = ObfuscatedString(
    Secret(
      data: Uint8List.fromList([0x00, 0x00, 0x00, 0x4a, 0x01, 0xb3, 0x2b, 0x1d, 0xd8, 0xa5, 0xb3, 0x05, 0xd3, 0xfe, 0x0c, 0xb4, 0x51, 0x0d, 0x61, 0xce, 0x2f, 0x3f, 0x83, 0x34, 0x0f, 0x80, 0x1a, 0x7a, 0xa8, 0xe0, 0x8b, 0x4c, 0x4d, 0xe4, 0x65, 0x57, 0xa7, 0x11, 0x07, 0x89, 0xbd, 0x57, 0x30, 0xce, 0xb1, 0x24, 0xef, 0xac, 0xdf, 0xd3, 0x2d, 0x42, 0x40, 0xa3, 0x5c, 0x02, 0x6b, 0x67, 0xf2, 0xe0, 0x7b, 0x90, 0x72, 0x81, 0x1d, 0xd4, 0xba, 0x29, 0x5f, 0xf7, 0xec, 0x07, 0x82, 0x5f, 0x8f, 0xc8, 0xff, 0x25, 0x9a, 0x20, 0x04, 0x48, 0x06, 0x08, 0x28, 0x2d, 0x2e, 0x33, 0x10, 0x1c, 0x45, 0x02, 0x11, 0x0c, 0x3c, 0x24, 0x23, 0x27, 0x32, 0x0f, 0x0a, 0x18, 0x2a, 0x39, 0x1f, 0x21, 0x15, 0x07, 0x0d, 0x3f, 0x31, 0x2b, 0x01, 0x13, 0x3a, 0x29, 0x25, 0x00, 0x30, 0x36, 0x0e, 0x3e, 0x3b, 0x03, 0x14, 0x37, 0x2c, 0x41, 0x2f, 0x47, 0x05, 0x16, 0x17, 0x26, 0x34, 0x38, 0x44, 0x1b, 0x3d, 0x12, 0x22, 0x0b, 0x35, 0x09, 0x46, 0x1e, 0x1a, 0x40, 0x43, 0x42, 0x1d, 0x19, 0x49]),
      nonce: 3937244556,
    ),
    _deobfuscateData,
  );

  static final suspiciousDynamicLibraries = ObfuscatedStringList(
    Secret(
      data: Uint8List.fromList([0x00, 0x00, 0x00, 0x5d, 0x01, 0xf0, 0x2f, 0xf8, 0x22, 0x86, 0xbe, 0x2f, 0x1f, 0x82, 0xdb, 0x9b, 0xdd, 0x09, 0x30, 0x66, 0x62, 0x78, 0x51, 0x1c, 0xa7, 0xb8, 0x07, 0xd8, 0x48, 0xc9, 0x03, 0xae, 0x43, 0x4a, 0x5e, 0x30, 0x74, 0x0e, 0xa4, 0x1e, 0xc4, 0x06, 0x24, 0x94, 0x9f, 0x90, 0xd7, 0xcb, 0x86, 0x56, 0xbb, 0xd7, 0xcc, 0xc7, 0x16, 0x15, 0xf6, 0xfc, 0x99, 0xf4, 0x94, 0x18, 0x72, 0x2a, 0x1b, 0xab, 0x42, 0x10, 0x71, 0x0d, 0x66, 0xe8, 0xb2, 0xc6, 0xeb, 0x57, 0x7a, 0x68, 0xb4, 0x73, 0x48, 0xae, 0x23, 0x05, 0x94, 0x71, 0xdb, 0xc5, 0x0c, 0x5f, 0x45, 0x17, 0x2c, 0x41, 0x01, 0x7b, 0x1e, 0x52, 0x2c, 0x15, 0x4a, 0x3e, 0x1c, 0x34, 0x4d, 0x41, 0x5c, 0x2d, 0x37, 0x1d, 0x36, 0x4c, 0x08, 0x5a, 0x21, 0x30, 0x52, 0x4f, 0x29, 0x10, 0x14, 0x24, 0x33, 0x40, 0x49, 0x00, 0x46, 0x20, 0x25, 0x2a, 0x06, 0x57, 0x43, 0x56, 0x50, 0x0e, 0x0c, 0x17, 0x05, 0x1a, 0x2f, 0x44, 0x0f, 0x42, 0x38, 0x32, 0x53, 0x0a, 0x16, 0x39, 0x11, 0x18, 0x55, 0x26, 0x2b, 0x28, 0x59, 0x04, 0x12, 0x3d, 0x09, 0x23, 0x5b, 0x3c, 0x27, 0x3b, 0x03, 0x0d, 0x3f, 0x4e, 0x35, 0x3a, 0x48, 0x1b, 0x02, 0x54, 0x0b, 0x07, 0x22, 0x45, 0x2e, 0x1f, 0x13, 0x4b, 0x51, 0x19, 0x1e, 0x47, 0x31, 0x58, 0x01]),
      nonce: 63793829,
    ),
    _deobfuscateData,
  );

  static final suspiciousFilePaths = ObfuscatedStringList(
    Secret(
      data: Uint8List.fromList([0x00, 0x00, 0x00, 0x92, 0x01, 0xfb, 0x9c, 0x87, 0xb2, 0xff, 0x11, 0x5d, 0x27, 0x77, 0xd1, 0x34, 0x81, 0x6c, 0x1f, 0x4f, 0x4a, 0x31, 0xef, 0x08, 0xa6, 0xe4, 0xc6, 0x76, 0x57, 0x08, 0xd4, 0x64, 0xc4, 0x2a, 0x28, 0xe6, 0xa7, 0x5f, 0x44, 0x98, 0xa4, 0xe9, 0xf9, 0xbf, 0x66, 0x67, 0x75, 0x10, 0x4b, 0x36, 0xb2, 0xd4, 0x48, 0xc3, 0x37, 0xbf, 0xef, 0x8e, 0x23, 0xc6, 0xc6, 0x68, 0x13, 0xf7, 0x8f, 0xaa, 0x66, 0x51, 0x98, 0x34, 0x41, 0x2b, 0x8f, 0x16, 0x01, 0x1f, 0x7e, 0x60, 0x99, 0x4a, 0x0c, 0x44, 0xcf, 0x66, 0x0c, 0xfa, 0x72, 0xcf, 0x69, 0xe8, 0x65, 0x25, 0xa8, 0x77, 0xb5, 0x1f, 0xa6, 0x5f, 0x8a, 0x59, 0xea, 0x4e, 0xa2, 0x20, 0x75, 0x03, 0xbd, 0xac, 0xb9, 0xa5, 0xa8, 0xa9, 0x2c, 0xe5, 0xfc, 0xd3, 0xfa, 0x38, 0xb6, 0xad, 0x69, 0x67, 0x44, 0x51, 0x39, 0x9d, 0x01, 0xa3, 0xe5, 0x01, 0x91, 0x5d, 0x27, 0x09, 0xf0, 0x8f, 0x89, 0x4b, 0x0b, 0x24, 0x08, 0xfa, 0xa7, 0x42, 0xc3, 0xd9, 0x22, 0x20, 0x9d, 0x35, 0x34, 0x4f, 0x58, 0x6a, 0x38, 0x6d, 0x33, 0x42, 0x24, 0x79, 0x06, 0x13, 0x0c, 0x84, 0x17, 0x15, 0x78, 0x20, 0x74, 0x4c, 0x56, 0x82, 0x22, 0x44, 0x29, 0x4b, 0x4e, 0x3e, 0x8f, 0x5e, 0x55, 0x8a, 0x7c, 0x47, 0x45, 0x7a, 0x6c, 0x5a, 0x4d, 0x76, 0x11, 0x14, 0x88, 0x2a, 0x87, 0x53, 0x02, 0x1b, 0x23, 0x21, 0x61, 0x64, 0x75, 0x57, 0x68, 0x5d, 0x0d, 0x2d, 0x69, 0x83, 0x62, 0x3a, 0x2e, 0x04, 0x26, 0x70, 0x1e, 0x35, 0x89, 0x6e, 0x7d, 0x08, 0x32, 0x19, 0x90, 0x39, 0x12, 0x65, 0x16, 0x8e, 0x3d, 0x34, 0x8c, 0x91, 0x5f, 0x0b, 0x66, 0x18, 0x5b, 0x07, 0x41, 0x80, 0x6b, 0x52, 0x25, 0x7f, 0x59, 0x7e, 0x2f, 0x3c, 0x7b, 0x63, 0x1f, 0x30, 0x8d, 0x37, 0x00, 0x71, 0x3f, 0x54, 0x31, 0x01, 0x48, 0x51, 0x1d, 0x49, 0x2b, 0x28, 0x3b, 0x40, 0x27, 0x5c, 0x0f, 0x4a, 0x09, 0x72, 0x03, 0x86, 0x81, 0x50, 0x2c, 0x8b, 0x6f, 0x85, 0x05, 0x67, 0x0e, 0x0a, 0x60, 0x73, 0x1c, 0x43, 0x46, 0x36, 0x77, 0x10, 0x1a]),
      nonce: 3719191957,
    ),
    _deobfuscateData,
  );

  static T _deobfuscateData<T>(Uint8List data, int nonce) {
    try {
      var result = data;
      result = _deobfuscateShuffle(result, nonce);
      return _deserializeValue<T>(result);
    } catch (e) {
      throw Exception('Deobfuscation failed: $e');
    }
  }

  static T _deserializeValue<T>(Uint8List data) {
    final json = utf8.decode(data);
    final decoded = jsonDecode(json);
    return decoded as T;
  }

  static Uint8List _deobfuscateShuffle(Uint8List data, int nonce) {
    // Implementation would use the actual shuffle deobfuscation
    throw UnimplementedError('Shuffle deobfuscation not implemented in generated code');
  }

  // Additional deobfuscation methods would be generated here based on the algorithm
  static Uint8List _deobfuscateAesGcm(Uint8List data, int nonce, int keySize) {
    throw UnimplementedError('AES-GCM deobfuscation not implemented in generated code');
  }

  static Uint8List _deobfuscateChaCha20Poly1305(Uint8List data, int nonce) {
    throw UnimplementedError('ChaCha20-Poly1305 deobfuscation not implemented in generated code');
  }

  static Uint8List _deobfuscateXor(Uint8List data, int nonce) {
    throw UnimplementedError('XOR deobfuscation not implemented in generated code');
  }

  static Uint8List _deobfuscateCompression(Uint8List data, int nonce, String algorithm) {
    throw UnimplementedError('Compression deobfuscation not implemented in generated code');
  }
}
